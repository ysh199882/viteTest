import { Plugin } from 'vite';
import { ESLint } from 'eslint';
import { FilterPattern } from '@rollup/pluginutils';

/** Plugin options, extending from ESlint options */
interface Options extends ESLint.Options {
    /** A single file, or array of files, to include when linting */
    include?: FilterPattern;
    /** A single file, or array of files, to exclude when linting */
    exclude?: FilterPattern;
    /** Custom error formatter or the name of a built-in formatter */
    formatter?: string | ESLint.Formatter['format'];
    /** The warings found will be printed */
    emitWarning?: boolean;
    /** The errors found will be printed */
    emitError?: boolean;
    /** Will cause the module build to fail if there are any warnings, based on emitWarning */
    failOnWarning?: boolean;
    /** Will cause the module build to fail if there are any errors, based on emitError */
    failOnError?: boolean;
    /**
     * The warings found will be emitted
     * @deprecated
     */
    throwOnWarning?: boolean;
    /**
     * The errors found will be emitted
     * @deprecated
     */
    throwOnError?: boolean;
}

declare function eslintPlugin(rawOptions?: Options): Plugin;

export { Options, eslintPlugin as default };
